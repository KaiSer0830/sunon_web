{"remainingRequest":"E:\\daily software download\\Git_files\\KaiSer0830\\sunon_web\\node_modules\\babel-loader\\lib\\index.js!E:\\daily software download\\Git_files\\KaiSer0830\\sunon_web\\src\\assets\\js\\verify.js","dependencies":[{"path":"E:\\daily software download\\Git_files\\KaiSer0830\\sunon_web\\src\\assets\\js\\verify.js","mtime":1619059649270},{"path":"E:\\daily software download\\Git_files\\KaiSer0830\\sunon_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614665819498},{"path":"E:\\daily software download\\Git_files\\KaiSer0830\\sunon_web\\node_modules\\babel-loader\\lib\\index.js","mtime":1614665890939}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\n!function (window, document) {\n  function GVerify(options) {\n    // 创建一个图形验证码对象，接收options对象为参数\n    this.options = {\n      // 默认options参数值\n      id: \"\",\n      // 容器Id\n      canvasId: \"verifyCanvas\",\n      // canvas的ID\n      width: \"100\",\n      // 默认canvas宽度\n      height: \"30\",\n      // 默认canvas高度\n      type: \"blend\",\n      // 图形验证码默认类型blend:数字字母混合类型、number:纯数字、letter:纯字母\n      code: \"\"\n    };\n\n    if (Object.prototype.toString.call(options) == \"[object Object]\") {\n      // 判断传入参数类型\n      for (var i in options) {\n        // 根据传入的参数，修改默认参数值\n        this.options[i] = options[i];\n      }\n    } else {\n      this.options.id = options;\n    }\n\n    this.options.numArr = \"0,1,2,3,4,5,6,7,8,9\".split(\",\");\n    this.options.letterArr = getAllLetter();\n\n    this._init();\n\n    this.refresh();\n  }\n\n  GVerify.prototype = {\n    /** 版本号* */\n    version: '1.0.0',\n\n    /** 初始化方法* */\n    _init: function _init() {\n      var con = document.getElementById(this.options.id);\n      var canvas = document.createElement(\"canvas\");\n      this.options.width = con.offsetWidth > 0 ? con.offsetWidth : \"100\";\n      this.options.height = con.offsetHeight > 0 ? con.offsetHeight : \"30\";\n      canvas.id = this.options.canvasId;\n      canvas.width = this.options.width;\n      canvas.height = this.options.height;\n      canvas.style.cursor = \"pointer\";\n      canvas.innerHTML = \"您的浏览器版本不支持canvas\";\n      con.appendChild(canvas);\n      var parent = this;\n\n      canvas.onclick = function () {\n        parent.refresh();\n      };\n    },\n\n    /** 生成验证码* */\n    refresh: function refresh() {\n      this.options.code = \"\";\n      var canvas = document.getElementById(this.options.canvasId);\n\n      if (canvas.getContext) {\n        var ctx = canvas.getContext('2d');\n      } else {\n        return;\n      }\n\n      ctx.textBaseline = \"middle\";\n      ctx.fillStyle = randomColor(180, 240);\n      ctx.fillRect(0, 0, this.options.width, this.options.height);\n\n      if (this.options.type == \"blend\") {\n        // 判断验证码类型\n        var txtArr = this.options.numArr.concat(this.options.letterArr);\n      } else if (this.options.type == \"number\") {\n        var txtArr = this.options.numArr;\n      } else {\n        var txtArr = this.options.letterArr;\n      }\n\n      for (var i = 1; i <= 4; i++) {\n        var txt = txtArr[randomNum(0, txtArr.length)];\n        this.options.code += txt;\n        ctx.font = randomNum(this.options.height / 2, this.options.height) + 'px SimHei'; // 随机生成字体大小\n\n        ctx.fillStyle = randomColor(50, 160); // 随机生成字体颜色\n\n        ctx.shadowOffsetX = randomNum(-3, 3);\n        ctx.shadowOffsetY = randomNum(-3, 3);\n        ctx.shadowBlur = randomNum(-3, 3);\n        ctx.shadowColor = \"rgba(0, 0, 0, 0.3)\";\n        var x = this.options.width / 5 * i;\n        var y = this.options.height / 2;\n        var deg = randomNum(-30, 30);\n        /** 设置旋转角度和坐标原点* */\n\n        ctx.translate(x, y);\n        ctx.rotate(deg * Math.PI / 180);\n        ctx.fillText(txt, 0, 0);\n        /** 恢复旋转角度和坐标原点* */\n\n        ctx.rotate(-deg * Math.PI / 180);\n        ctx.translate(-x, -y);\n      }\n      /** 绘制干扰线* */\n\n\n      for (var i = 0; i < 4; i++) {\n        ctx.strokeStyle = randomColor(40, 180);\n        ctx.beginPath();\n        ctx.moveTo(randomNum(0, this.options.width), randomNum(0, this.options.height));\n        ctx.lineTo(randomNum(0, this.options.width), randomNum(0, this.options.height));\n        ctx.stroke();\n      }\n      /** 绘制干扰点* */\n\n\n      for (var i = 0; i < this.options.width / 4; i++) {\n        ctx.fillStyle = randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(randomNum(0, this.options.width), randomNum(0, this.options.height), 1, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    },\n\n    /** 验证验证码* */\n    validate: function validate(code) {\n      var code = code.toLowerCase();\n      var v_code = this.options.code.toLowerCase();\n\n      if (code == v_code) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    /** 生成字母数组* */\n\n  };\n\n  function getAllLetter() {\n    var letterStr = \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\";\n    return letterStr.split(\",\");\n  }\n  /** 生成一个随机数* */\n\n\n  function randomNum(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  /** 生成一个随机色* */\n\n\n  function randomColor(min, max) {\n    var r = randomNum(min, max);\n    var g = randomNum(min, max);\n    var b = randomNum(min, max);\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  }\n\n  window.GVerify = GVerify;\n}(window, document);",{"version":3,"sources":["E:\\daily software download\\Git_files\\KaiSer0830\\sunon_web\\src\\assets\\js\\verify.js"],"names":["window","document","GVerify","options","id","canvasId","width","height","type","code","Object","prototype","toString","call","i","numArr","split","letterArr","getAllLetter","_init","refresh","version","con","getElementById","canvas","createElement","offsetWidth","offsetHeight","style","cursor","innerHTML","appendChild","parent","onclick","getContext","ctx","textBaseline","fillStyle","randomColor","fillRect","txtArr","concat","txt","randomNum","length","font","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","x","y","deg","translate","rotate","Math","PI","fillText","strokeStyle","beginPath","moveTo","lineTo","stroke","arc","fill","validate","toLowerCase","v_code","letterStr","min","max","floor","random","r","g","b"],"mappings":"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","sourcesContent":["!(function(window, document) {\n    function GVerify(options) { // 创建一个图形验证码对象，接收options对象为参数\n        this.options = { // 默认options参数值\n            id: \"\", // 容器Id\n            canvasId: \"verifyCanvas\", // canvas的ID\n            width: \"100\", // 默认canvas宽度\n            height: \"30\", // 默认canvas高度\n            type: \"blend\", // 图形验证码默认类型blend:数字字母混合类型、number:纯数字、letter:纯字母\n            code: \"\"\n        }\n        \n        if(Object.prototype.toString.call(options) == \"[object Object]\"){// 判断传入参数类型\n            for(var i in options) { // 根据传入的参数，修改默认参数值\n                this.options[i] = options[i];\n            }\n        }else{\n            this.options.id = options;\n        }\n        \n        this.options.numArr = \"0,1,2,3,4,5,6,7,8,9\".split(\",\");\n        this.options.letterArr = getAllLetter();\n\n        this._init();\n        this.refresh();\n    }\n\n    GVerify.prototype = {\n        /** 版本号* */\n        version: '1.0.0',\n        \n        /** 初始化方法* */\n        _init: function() {\n            var con = document.getElementById(this.options.id);\n            var canvas = document.createElement(\"canvas\");\n            this.options.width = con.offsetWidth > 0 ? con.offsetWidth : \"100\";\n            this.options.height = con.offsetHeight > 0 ? con.offsetHeight : \"30\";\n            canvas.id = this.options.canvasId;\n            canvas.width = this.options.width;\n            canvas.height = this.options.height;\n            canvas.style.cursor = \"pointer\";\n            canvas.innerHTML = \"您的浏览器版本不支持canvas\";\n            con.appendChild(canvas);\n            var parent = this;\n            canvas.onclick = function(){\n                parent.refresh();\n            }\n        },\n        \n        /** 生成验证码* */\n        refresh: function() {\n            this.options.code = \"\";\n            var canvas = document.getElementById(this.options.canvasId);\n            if(canvas.getContext) {\n                var ctx = canvas.getContext('2d');\n            }else{\n                return;\n            }\n            \n            ctx.textBaseline = \"middle\";\n\n            ctx.fillStyle = randomColor(180, 240);\n            ctx.fillRect(0, 0, this.options.width, this.options.height);\n\n            if(this.options.type == \"blend\") { // 判断验证码类型\n                var txtArr = this.options.numArr.concat(this.options.letterArr);\n            } else if(this.options.type == \"number\") {\n                var txtArr = this.options.numArr;\n            } else {\n                var txtArr = this.options.letterArr;\n            }\n\n            for(var i = 1; i <= 4; i++) {\n                var txt = txtArr[randomNum(0, txtArr.length)];\n                this.options.code += txt;\n                ctx.font = randomNum(this.options.height/2, this.options.height) + 'px SimHei'; // 随机生成字体大小\n                ctx.fillStyle = randomColor(50, 160); // 随机生成字体颜色\n                ctx.shadowOffsetX = randomNum(-3, 3);\n                ctx.shadowOffsetY = randomNum(-3, 3);\n                ctx.shadowBlur = randomNum(-3, 3);\n                ctx.shadowColor = \"rgba(0, 0, 0, 0.3)\";\n                var x = this.options.width / 5 * i;\n                var y = this.options.height / 2;\n                var deg = randomNum(-30, 30);\n                /** 设置旋转角度和坐标原点* */\n                ctx.translate(x, y);\n                ctx.rotate(deg * Math.PI / 180);\n                ctx.fillText(txt, 0, 0);\n                /** 恢复旋转角度和坐标原点* */\n                ctx.rotate(-deg * Math.PI / 180);\n                ctx.translate(-x, -y);\n            }\n            /** 绘制干扰线* */\n            for(var i = 0; i < 4; i++) {\n                ctx.strokeStyle = randomColor(40, 180);\n                ctx.beginPath();\n                ctx.moveTo(randomNum(0, this.options.width), randomNum(0, this.options.height));\n                ctx.lineTo(randomNum(0, this.options.width), randomNum(0, this.options.height));\n                ctx.stroke();\n            }\n            /** 绘制干扰点* */\n            for(var i = 0; i < this.options.width/4; i++) {\n                ctx.fillStyle = randomColor(0, 255);\n                ctx.beginPath();\n                ctx.arc(randomNum(0, this.options.width), randomNum(0, this.options.height), 1, 0, 2 * Math.PI);\n                ctx.fill();\n            }\n        },\n        \n        /** 验证验证码* */\n        validate: function(code){\n            var code = code.toLowerCase();\n            var v_code = this.options.code.toLowerCase();\n            if(code == v_code){\n                return true;\n            }else{\n                return false;\n            }\n        }\n    }\n    /** 生成字母数组* */\n    function getAllLetter() {\n        var letterStr = \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\";\n        return letterStr.split(\",\");\n    }\n    /** 生成一个随机数* */\n    function randomNum(min, max) {\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n    /** 生成一个随机色* */\n    function randomColor(min, max) {\n        var r = randomNum(min, max);\n        var g = randomNum(min, max);\n        var b = randomNum(min, max);\n        return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    }\n    window.GVerify = GVerify;\n})(window, document);"]}]}